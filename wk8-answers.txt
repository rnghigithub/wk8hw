1. AJAX stands for Asynchronous JavaScript and XML

2. XML stands for extensible Markup Language

3. uses a built in browser XMLHttpRequest object to request data from the server

4. AJAX allows for web pages to be updated asynchronously by exchanging data with a web
sever behind the scenes.

5. 
    1. An event occurs on the page. Page is loaded or button is clicked
    2. An XMLHttpRequest object sends request to server
    3. Server sends a response back to the web page that made such request 
    4. response is read by JavaScript
    5. JavaScript executes the page update


6. The XMLHttpRequest object it the cores of AJAX

7. XMLHttpRequest Object used to exchange data with a web server behind the scenes

8. variable = new XMLHttpRequest(); 

9.  var xhttps = new XMLHttpRequest();     

10.An XMLHttpRequest() constructor must be called before any other. This is because http cannot
be used anymore on a live server. 

11. https is required for a live server like a website the link is not valid unless you have https:// in the beginning   

12. the new keyword
 
13. it creates an object from a constructor function like XMLHttpRequest 

14.
    1. used to create an object from a constructor function like XMLHttpRequest()
    2.sets the new object internal, inaccessible property to teh constructors function's external prototype object
    3. executes the constructor function using the newly created object whenever this is mentioned
    4. the new keyword makes the this keyword point to the newly created object
    5. It returns this if the function does not return its own object.

15.  xhttps.onreadystatechange = function () {
      if (this.readyState === 4 && this.status === 200) {
          console.log(this.responseText);
          console.log(JSON.parse(this.responseText));
          const data = JSON.parse(this.responseText);
          document.getElementById('director').innerHTML = data.Director;
          document.getElementById('title').innerHTML = data.Title;
          document.getElementById('runtime').innerHTML = data.Runtime;
      }


16.the XMLHttpRequest.open() method initializes a newly created request or re-initializes a pre-existing one


17. xhttps.open("GET");


18. Tell me what the values passed to the open() method are for, and give me the parameters they represent the values (aka arguments) of. 
Hint: part of the answer may reside in the slide deck and inside the Related Resources links at the end of the deck, and part will reside in the README.md of the week 8 homework repository. 
You will have come across the information while reading the instructions for going through the steps of building your project.



19.xhttps.send();


20. 
the send() method accepts any parameter which lets you specify the request's body.  
If the request method is GET or HEAD, the body parameter is ignored, request body is null. 
The body parameter is not ignored with requests like PUT, this request modified the body 
content. GET/HEAD do not.    

